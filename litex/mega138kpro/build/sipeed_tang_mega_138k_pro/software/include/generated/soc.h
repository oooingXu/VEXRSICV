//--------------------------------------------------------------------------------
// Auto-generated by LiteX (59fc1caac) on 2024-10-27 22:45:55
//--------------------------------------------------------------------------------
#ifndef __GENERATED_SOC_H
#define __GENERATED_SOC_H
#define CONFIG_PLATFORM_NAME "sipeed_tang_mega_138k_pro"
#define CONFIG_CLOCK_FREQUENCY 50000000
#define CONFIG_CPU_HAS_INTERRUPT
#define CONFIG_CPU_RESET_ADDR 0
#define CONFIG_CPU_HAS_DCACHE
#define CONFIG_CPU_HAS_ICACHE
#define CONFIG_CPU_TYPE_VEXRISCV
#define CONFIG_CPU_VARIANT_STANDARD
#define CONFIG_CPU_FAMILY "riscv"
#define CONFIG_CPU_NAME "vexriscv"
#define CONFIG_CPU_HUMAN_NAME "VexRiscv"
#define CONFIG_CPU_NOP "nop"
#define CONFIG_IDENTIFIER "LiteX SoC on Tang Mega 138K Pro 2024-10-27 22:45:54"
#define LOCALIP1 192
#define LOCALIP2 168
#define LOCALIP3 1
#define LOCALIP4 50
#define REMOTEIP1 192
#define REMOTEIP2 168
#define REMOTEIP3 1
#define REMOTEIP4 100
#define CONFIG_CSR_DATA_WIDTH 32
#define CONFIG_CSR_ALIGNMENT 32
#define CONFIG_BUS_STANDARD "wishbone"
#define CONFIG_BUS_DATA_WIDTH 32
#define CONFIG_BUS_ADDRESS_WIDTH 32
#define CONFIG_BUS_BURSTING 0
#define CONFIG_CPU_INTERRUPTS 3
#define TIMER0_INTERRUPT 1
#define UART_INTERRUPT 0
#define WATCHDOG0_INTERRUPT 2

#ifndef __ASSEMBLER__
static inline const char * config_platform_name_read(void) {
	return "sipeed_tang_mega_138k_pro";
}
static inline int config_clock_frequency_read(void) {
	return 50000000;
}
static inline int config_cpu_reset_addr_read(void) {
	return 0;
}
static inline const char * config_cpu_family_read(void) {
	return "riscv";
}
static inline const char * config_cpu_name_read(void) {
	return "vexriscv";
}
static inline const char * config_cpu_human_name_read(void) {
	return "VexRiscv";
}
static inline const char * config_cpu_nop_read(void) {
	return "nop";
}
static inline const char * config_identifier_read(void) {
	return "LiteX SoC on Tang Mega 138K Pro 2024-10-27 22:45:54";
}
static inline int localip1_read(void) {
	return 192;
}
static inline int localip2_read(void) {
	return 168;
}
static inline int localip3_read(void) {
	return 1;
}
static inline int localip4_read(void) {
	return 50;
}
static inline int remoteip1_read(void) {
	return 192;
}
static inline int remoteip2_read(void) {
	return 168;
}
static inline int remoteip3_read(void) {
	return 1;
}
static inline int remoteip4_read(void) {
	return 100;
}
static inline int config_csr_data_width_read(void) {
	return 32;
}
static inline int config_csr_alignment_read(void) {
	return 32;
}
static inline const char * config_bus_standard_read(void) {
	return "wishbone";
}
static inline int config_bus_data_width_read(void) {
	return 32;
}
static inline int config_bus_address_width_read(void) {
	return 32;
}
static inline int config_bus_bursting_read(void) {
	return 0;
}
static inline int config_cpu_interrupts_read(void) {
	return 3;
}
static inline int timer0_interrupt_read(void) {
	return 1;
}
static inline int uart_interrupt_read(void) {
	return 0;
}
static inline int watchdog0_interrupt_read(void) {
	return 2;
}
#endif // !__ASSEMBLER__

#endif
